<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.weshare.api.v1.token.jwt.JwtServiceImplTest" tests="13" skipped="0" failures="0" errors="0" timestamp="2024-02-05T12:56:37" hostname="hyunwoo-MacBookAir.local" time="0.123">
  <properties/>
  <testcase name="유효하지 않은 토큰이면 False를 반환한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.007"/>
  <testcase name="토큰이 유효하면 true를 반환한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.007"/>
  <testcase name="사용자 정보를 통해서 RefreshToken을 발급받을 수 있다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.005"/>
  <testcase name="만료된 토큰으로 이메일을 조회시 예외가 발생한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.009"/>
  <testcase name="사용자 정보를 통해서 AccessToken을 발급받을 수 있다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.005"/>
  <testcase name="유효하지 않은 토큰으로 이메일을 조회시 예외가 발생한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.004"/>
  <testcase name="토큰값은 중복되지 않는다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.04"/>
  <testcase name="만료된 토큰이면 False를 반환한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.006"/>
  <testcase name="유효하지 않은 토큰으로 남은시간을 조회시 예외가 발생한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.004"/>
  <testcase name="토큰을 통해서 사용자 이메일을 가져올 수 있다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.009"/>
  <testcase name="만료된 토큰으로 남은시간을 조회시 예외가 발생한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.007"/>
  <testcase name="토큰의 남은 시간을 알 수 있다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.006"/>
  <testcase name="자신의 토큰이 아니면 False를 반환한다." classname="com.weshare.api.v1.token.jwt.JwtServiceImplTest" time="0.007"/>
  <system-out><![CDATA[[startup] 21:56:37.309 [Test worker] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.weshare.api.v1.token.jwt.JwtServiceImplTest]: JwtServiceImplTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[startup] 21:56:37.321 [Test worker] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.weshare.WeShareApplication for test class com.weshare.api.v1.token.jwt.JwtServiceImplTest
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role,u1_0.social from users u1_0 where u1_0.email=?
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: insert into users (birth_date,email,name,password,profile_img,role,social) values (?,?,?,?,?,?,?)
Hibernate: delete from users
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
