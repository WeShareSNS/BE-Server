<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.weShare.api.v1.token.jwt.JwtServiceTest" tests="8" skipped="0" failures="0" errors="0" timestamp="2024-01-18T14:22:05" hostname="hyunwoo-MacBookAir.local" time="0.089">
  <properties/>
  <testcase name="토큰이 유효하면 true를 반환한다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.007"/>
  <testcase name="사용자 정보를 통해서 RefreshToken을 발급받을 수 있다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.008"/>
  <testcase name="사용자 정보를 통해서 AccessToken을 발급받을 수 있다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.006"/>
  <testcase name="토큰이 만료되면 예외가 발생한다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.002"/>
  <testcase name="서버에서 발급한 토큰이 아니면 예외가 발생한다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.001"/>
  <testcase name="토큰값이 중복되는지 체크" classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.033"/>
  <testcase name="토큰을 통해서 사용자 이메일을 가져올 수 있다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.008"/>
  <testcase name="자신의 토큰이 아니면 False를 반환한다." classname="com.weShare.api.v1.token.jwt.JwtServiceTest" time="0.008"/>
  <system-out><![CDATA[2024.01.18 23:22:05.614 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.weShare.api.v1.token.jwt.JwtServiceTest]: JwtServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2024.01.18 23:22:05.624 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.weShare.WeShareApplication for test class com.weShare.api.v1.token.jwt.JwtServiceTest 
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from users u1_0 where u1_0.email=?
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: delete from users
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
