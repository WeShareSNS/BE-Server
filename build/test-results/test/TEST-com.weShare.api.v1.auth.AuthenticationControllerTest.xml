<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.weShare.api.v1.auth.AuthenticationControllerTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2024-01-23T01:17:37" hostname="hyunwoo-MacBookAir.local" time="1.008">
  <properties/>
  <testcase name="사용자는 refresh 토큰을 통해서 access 토큰을 발급받을 수 있다." classname="com.weShare.api.v1.auth.AuthenticationControllerTest" time="0.337"/>
  <testcase name="사용자는 logout할 수 있다." classname="com.weShare.api.v1.auth.AuthenticationControllerTest" time="0.324"/>
  <testcase name="사용자는 회원가입을 할 수 있다." classname="com.weShare.api.v1.auth.AuthenticationControllerTest" time="0.091"/>
  <testcase name="사용자는 로그인을 할 수 있다." classname="com.weShare.api.v1.auth.AuthenticationControllerTest" time="0.252"/>
  <system-out><![CDATA[2024.01.23 10:17:36.304 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.weShare.api.v1.auth.AuthenticationControllerTest]: AuthenticationControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2024.01.23 10:17:36.318 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.weShare.WeShareApplication for test class com.weShare.api.v1.auth.AuthenticationControllerTest 

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.1)

2024.01.23 10:17:36.337 [Test worker] INFO  c.w.a.v.a.AuthenticationControllerTest - Starting AuthenticationControllerTest using Java 21.0.1 with PID 60918 (started by macm1 in /Users/ryu/프로젝트/weShare) 
2024.01.23 10:17:36.337 [Test worker] INFO  c.w.a.v.a.AuthenticationControllerTest - No active profile set, falling back to 1 default profile: "default" 
2024.01.23 10:17:36.413 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
2024.01.23 10:17:36.413 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
2024.01.23 10:17:36.415 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces. 
2024.01.23 10:17:36.436 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
2024.01.23 10:17:36.437 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
2024.01.23 10:17:36.441 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.weShare.api.v1.token.jwt.logout.LogoutAccessTokenRedisRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository 
2024.01.23 10:17:36.444 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces. 
2024.01.23 10:17:36.446 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
2024.01.23 10:17:36.446 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
2024.01.23 10:17:36.448 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.weShare.api.v1.domain.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
2024.01.23 10:17:36.448 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.weShare.api.v1.token.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
2024.01.23 10:17:36.451 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 1 Redis repository interface. 
2024.01.23 10:17:36.513 [Test worker] INFO  o.h.j.i.u.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default] 
2024.01.23 10:17:36.514 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled 
2024.01.23 10:17:36.515 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer 
2024.01.23 10:17:36.515 [Test worker] INFO  c.z.h.HikariDataSource - HikariPool-2 - Starting... 
2024.01.23 10:17:36.518 [Test worker] INFO  c.z.h.p.HikariPool - HikariPool-2 - Added connection org.mariadb.jdbc.Connection@c4c4852 
2024.01.23 10:17:36.518 [Test worker] INFO  c.z.h.HikariDataSource - HikariPool-2 - Start completed. 
2024.01.23 10:17:36.519 [Test worker] WARN  o.h.o.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) 
2024.01.23 10:17:36.546 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) 
Hibernate: alter table refresh_token drop foreign key FKjtx87i0jvq2svedphegvdwcuy
Hibernate: drop table if exists refresh_token
Hibernate: drop table if exists users
Hibernate: create table refresh_token (id bigint not null auto_increment, user_id bigint, token varchar(255), token_type enum ('BEARER'), primary key (id)) engine=InnoDB
Hibernate: create table users (birth_date date not null, user_id bigint not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255), profile_img varchar(255), role enum ('USER','ADMIN','MANAGER'), primary key (user_id)) engine=InnoDB
Hibernate: alter table refresh_token add constraint UK_f95ixxe7pa48ryn1awmh2evt7 unique (user_id)
Hibernate: alter table refresh_token add constraint UK_r4k4edos30bx9neoq81mdvwph unique (token)
Hibernate: alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: alter table users add constraint UK_3g1j96g94xpk3lpxl2qbl985x unique (name)
Hibernate: alter table refresh_token add constraint FKjtx87i0jvq2svedphegvdwcuy foreign key (user_id) references users (user_id)
2024.01.23 10:17:36.929 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default' 
2024.01.23 10:17:37.022 [Test worker] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d73aa0e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e2f838e, org.springframework.security.web.context.SecurityContextHolderFilter@13a0f230, org.springframework.security.web.header.HeaderWriterFilter@27e037c1, org.springframework.web.filter.CorsFilter@76b96594, org.springframework.security.web.authentication.logout.LogoutFilter@3540d5e3, com.weShare.api.v1.config.JwtAuthenticationFilter@4a5e1a3a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ddd3150, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b255b15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5fc444d0, org.springframework.security.web.session.SessionManagementFilter@4fbdc20, org.springframework.security.web.access.ExceptionTranslationFilter@6824c2e6, org.springframework.security.web.access.intercept.AuthorizationFilter@508f2b78] 
2024.01.23 10:17:37.124 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet '' 
2024.01.23 10:17:37.124 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet '' 
2024.01.23 10:17:37.125 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms 
2024.01.23 10:17:37.134 [Test worker] INFO  c.w.a.v.a.AuthenticationControllerTest - Started AuthenticationControllerTest in 0.813 seconds (process running for 5.137) 
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: insert into refresh_token (token,token_type,user_id) values (?,?,?)
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from refresh_token rt1_0 join users u1_0 on rt1_0.user_id=u1_0.user_id where rt1_0.token=?
Hibernate: select rt1_0.id,rt1_0.token,rt1_0.token_type,rt1_0.user_id from refresh_token rt1_0 join users u1_0 on rt1_0.user_id=u1_0.user_id where rt1_0.user_id=?
Hibernate: update refresh_token set token=?,token_type=?,user_id=? where id=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/auth/reissue-token
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"246"]
             Body = {"refreshToken":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjoxLCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDA1Nzk4NzksImV4cCI6OTMyNDAxMTg0Njg5fQ.yikGxSf_PuS6HM0a-uN-v1qA0OAWqJCC84O63YnMiKQ"}
    Session Attrs = {}

Handler:
             Type = com.weShare.api.v1.auth.AuthenticationController
           Method = com.weShare.api.v1.auth.AuthenticationController#reissueToken(ReissueTokenRequest, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Set-Cookie:"Refresh-Token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjoxLCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDA2OTk4NjMsImV4cCI6OTMyNDAxMzA0NjY0fQ.sjiyR6GlmpHJcxehBGywz04mzruPnIEcu3uZvN0EioI; Path=/; Max-Age=604800; Expires=Tue, 30 Jan 2024 01:17:37 GMT; Secure; HttpOnly", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"accessToken":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjoxLCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDA2OTk1MzAsImV4cCI6OTMyNDAwNjk5NTYxfQ.ojDShHUinek2DgaoH0mGFQywBJAZDeFGvRi-CezciWA"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = [[Cookie@7a0c046e name = 'Refresh-Token', value = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjoxLCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDA2OTk4NjMsImV4cCI6OTMyNDAxMzA0NjY0fQ.sjiyR6GlmpHJcxehBGywz04mzruPnIEcu3uZvN0EioI', comment = [null], domain = [null], maxAge = 604800, path = '/', secure = true, version = 0, httpOnly = true]]
Hibernate: select rt1_0.id,rt1_0.token,rt1_0.token_type,rt1_0.user_id from refresh_token rt1_0 join users u1_0 on rt1_0.user_id=u1_0.user_id where rt1_0.user_id=?
Hibernate: delete from refresh_token
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from users u1_0 where u1_0.email=?
Hibernate: select rt1_0.id,rt1_0.token,rt1_0.token_type,u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from refresh_token rt1_0 join users u1_0 on u1_0.user_id=rt1_0.user_id where u1_0.email=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/auth/logout
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjoyLCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDA4NTc4NjUsImV4cCI6OTMyNDAwODU3ODk3fQ.2EKrfn0Jo35HDxV2-oOc4nq1lhZtjNWus6Q39-Zl9w0", Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.weShare.api.v1.auth.AuthenticationController
           Method = com.weShare.api.v1.auth.AuthenticationController#logout(HttpServletRequest, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Set-Cookie:"Refresh-Token=; Max-Age=0; Expires=Thu, 01 Jan 1970 00:00:00 GMT", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = [[Cookie@157f284b name = 'Refresh-Token', value = [null], comment = [null], domain = [null], maxAge = 0, path = [null], secure = false, version = 0, httpOnly = false]]
Hibernate: delete from refresh_token
Hibernate: delete from users
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from users u1_0 where u1_0.email=?
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/auth/signup
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"72"]
             Body = {"email":"email@asd.com","password":"password","birthDate":"1999-09-27"}
    Session Attrs = {}

Handler:
             Type = com.weShare.api.v1.auth.AuthenticationController
           Method = com.weShare.api.v1.auth.AuthenticationController#signup(SignupRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: delete from refresh_token
Hibernate: delete from users
Hibernate: insert into users (birth_date,email,name,password,profile_img,role) values (?,?,?,?,?,?)
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from users u1_0 where u1_0.email=?
2024.01.23 10:17:38.138 [Test worker] INFO  c.w.a.v.a.AuthenticationService - authAnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] 
Hibernate: select u1_0.user_id,u1_0.birth_date,u1_0.email,u1_0.name,u1_0.password,u1_0.profile_img,u1_0.role from users u1_0 where u1_0.email=?
Hibernate: select rt1_0.id,rt1_0.token,rt1_0.token_type,rt1_0.user_id from refresh_token rt1_0 join users u1_0 on rt1_0.user_id=u1_0.user_id where rt1_0.user_id=?
Hibernate: insert into refresh_token (token,token_type,user_id) values (?,?,?)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/auth/login
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"47"]
             Body = {"email":"email@asd.com","password":"password"}
    Session Attrs = {}

Handler:
             Type = com.weShare.api.v1.auth.AuthenticationController
           Method = com.weShare.api.v1.auth.AuthenticationController#login(LoginRequest, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Set-Cookie:"Refresh-Token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjo0LCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDE0MzEyODIsImV4cCI6OTMyNDAyMDM2MDgyfQ.NkQP2ry3Uh7xjwOkJVsRMvY8lJQICRR5e8_QfErlOUE; Path=/; Max-Age=604800; Expires=Tue, 30 Jan 2024 01:17:38 GMT; Secure; HttpOnly", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"accessToken":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjo0LCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDE0MzA3MTcsImV4cCI6OTMyNDAxNDMwNzQ5fQ.-JPeqWsT0imDPJcD39g2iWWP79eglAD4kEooZZ9P-1Y"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = [[Cookie@726c1889 name = 'Refresh-Token', value = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiVVNFUiIsImlkIjo0LCJ1c2VybmFtZSI6ImVtYWlsQGFzZC5jb20iLCJzdWIiOiJlbWFpbEBhc2QuY29tIiwiaWF0Ijo5MzI0MDE0MzEyODIsImV4cCI6OTMyNDAyMDM2MDgyfQ.NkQP2ry3Uh7xjwOkJVsRMvY8lJQICRR5e8_QfErlOUE', comment = [null], domain = [null], maxAge = 604800, path = '/', secure = true, version = 0, httpOnly = true]]
Hibernate: delete from refresh_token
Hibernate: delete from users
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
